# How to deal with Monster Methods

## What is a Monter Method

If you ever seen a thousands lines of code long method, complex and
not very readable o clear, of course, that was a Monster Method.

## Variety of Monsters

- *Bulleted Methods*

  A bulleted method is a method with nearly no indentation. It is just
  a sequence of code chunks that reminds you of a bulleted list. Some
  of the code in the chunks might be indented, but the method itself
  isn't dominated by indentation.

  What to do:

  Just try to extract sections as method. That is not always an easy
  way, because sometime a temporary variable used in a section is also
  used in another section.

- *Snarled Methods*

  A snarled method is a method dominated by a single large, indented
  section. The simplest case is a method that has one large
  conditional statement

- *Tackling Monsters with Automated Refactoring Support*

  When doing automated refactoring without tests, use the tool
  exclusively. After a series of automated refactorings, you can often
  get tests in place that you can use to verify any manual edits that
  you make.

  - Key goals to keep in mind during extractions:

    1. To separate logic from awkward dependencies
    2. To introduce seams that make it easier to get tests in place
       for more refactoring

- *Introduce Sensing Variable*

  Sometimes it helps to add a variable to a class and use it to sense
  conditions in the method that we want to refactor. When we've done
  the refactoring that we need to do, we can get rid of that variable.

  It's like introduce a spy mechanism directly into application code.